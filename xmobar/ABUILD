#ABUILD created by/создан: agr3ss0r, agr3ss0r86 at gmail.com 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=xmobar
pkgver=0.13
pkgbuild=1
arch=('auto')

shortdesc="xmobar (A Minimalistic Text Based Status Bar)"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("It was designed to work with the xmonad Window Manager."
	  "It was inspired by the Ion3 status bar, and supports similar features, like dynamic color management, output templates, and extensibility through plugins."
	  ""
	  "Homepage: http://code.haskell.org/~arossato/xmobar/"
)

source=("http://hackage.haskell.org/packages/archive/${pkgname}/${pkgver}/${pkgname}-${pkgver}.tar.gz")

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags="xapps x11-misc"

#dependencies only needed to build package
build_deps=""

provides=""
conflicts=""

adddep=""
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
#numjobs=1

#additional files should be copied into /usr/docs/${pkgname} dir from sources
docs=
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip
custom_opts="no_strip"

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
echo ""
}

build()
{
go_src_dir
burn_patches

LDFLAGS="$SLKLDFLAGS" CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCFLAGS"
runhaskell Setup configure \
--prefix=/usr \
--libdir=/usr/lib${LIBDIRSUFFIX} \
--enable-shared \
--docdir=/usr/doc/${pkgname}-${pkgver} \
--ghc \
--disable-optimization \
--flags="with_xft" || return 1

runhaskell Setup build || return 1
runhaskell Setup haddock || return 1
runhaskell Setup copy --destdir=${pkgdir} || return 1
}

#ran after function build() 
#после сборки
after_build()
{
echo ""
}
