#ABUILD created by/создан: agr3ss0r, agr3ss0r86 at gmail.com 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=tagpy
pkgver=0.94.7
pkgbuild=2
arch=('auto')

shortdesc="TagPy (Taglib Python bindings)"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("TagPy is a set of Python bindings  for  Scott  Wheeler..s TagLib. It builds upon Boost.Python, a wrapper generation library which is part of the Boost set of C++ libraries."
	  ""
	  "Homepage: http://mathema.tician.de//software/tagpy"
)

source=("http://pypi.python.org/packages/source/t/${pkgname}/${pkgname}-${pkgver}.tar.gz")

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags="libs dev-python"

#dependencies only needed to build package
build_deps=""

provides=""
conflicts=""

adddep=""
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
#numjobs=1

#additional files should be copied into /usr/docs/${pkgname} dir from sources
docs=
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip
custom_opts=""

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
echo ""
}

build()
{
go_src_dir
burn_patches

./configure.py \
--boost-inc-dir=/usr/include/boost \
--boost-lib-dir=/usr/lib${LIBDIRSUFFIX} \
--boost-python-libname=boost_python-mt \
--taglib-inc-dir=/usr/include/taglib \
--taglib-lib-dir=/usr/lib${LIBDIRSUFFIX}

python setup.py build || exit 1
python setup.py install --root $pkgdir || exit 1
}

#ran after function build() 
#после сборки
after_build()
{
echo ""
}
