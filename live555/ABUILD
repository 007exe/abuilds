#ABUILD created by/создан: agr3ss0r, agr3ss0r86 at gmail.com 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=live555
pkgver=2011.03.14
pkgbuild=1
arch=('auto')

shortdesc="Live555 (C++ libraries for multimedia streaming)"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("Live555 using open  standard  protocols (RTP/RTCP, RTSP, SIP). These libraries - which can be compiled for  Unix (including Linux and Mac OS X), Windows, and QNX (and other POSIX-compliant systems) - can be used to build streaming applications."
	  ""
	  "Homepage: http://www.live555.com/"
)

source=("http://www.live555.com/liveMedia/public/live.${pkgver}.tar.gz")

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------

tags="libs media-libs"     			#short and long tags / длинный и короткий тег
build_deps="" 			#

provides=""
conflicts=""

adddep=""
removedep=""

#numjobs=1 #Set number of jobs while compliling, otherwise it'll be autodetected

docs=				#additional files should be copied into /usr/docs/${pkgname} dir from sources
gendeps_blacklist=

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
echo ""
}

build()
{
go_src_dir
burn_patches

sed -i -e "s|-O2|${SLKCFLAGS}|g" config.linux
./genMakefiles linux
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
make -j${numjobs} || exit 1

for dir in BasicUsageEnvironment UsageEnvironment groupsock liveMedia; do
	mkdir -p ${pkgdir}/usr/lib${LIBDIRSUFFIX}/live-media/$dir
	cp -r $dir/*.a $dir/include ${pkgdir}/usr/lib${LIBDIRSUFFIX}/live-media/$dir
done

mkdir -p $pkgdir/usr/bin
for testprog in `find testProgs -type f -perm 755`; do
	install $testprog ${pkgdir}/usr/bin
done
}
                                                                                                                  burn_patches                                                                                                      
#ran after function build() 
#после сборки
after_build()
{
echo ""
}
