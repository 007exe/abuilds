#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=libmatroska
pkgver=1.1.0
pkgbuild=1
arch=('auto')

shortdesc="libmatroska (an extensible open standard Audio/Video container)"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("libmatroska is a required library for the program mkvtoolnix which creates and manipulates .mkv files (matroska video) and .mka files (matroska audio). Matroska is an extensible open standard Audio/Video container."
	  ""
	  "http://www.bunkus.org/videotools/mkvtoolnix/source.html"
)

source=("http://dl.matroska.org/downloads/${pkgname}/${pkgname}-${pkgver}.tar.bz2")

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------

tags="libs media-libs"     			#short and long tags / длинный и короткий тег
build_deps="" 			#

provides=""
conflicts=""

adddep=""
removedep=""


#numjobs=1 #Set number of jobs while compliling, otherwise it'll be autodetected

docs=				#additional files should be copied into /usr/docs/${pkgname} dir from sources
gendeps_blacklist=

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
echo ""
}

build()
{
go_src_dir
burn_patches

cd make/linux

LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
make sharedlib -j${numjobs} || exit 1
make prefix=$pkgdir/usr libdir=$pkgdir/usr/lib${LIBDIRSUFFIX} install || exit 1
}
                                                                                                                  burn_patches                                                                                                      
#ran after function build() 
#после сборки
after_build()
{
echo ""
#rm -rf $pkgdir/usr/doc
}
