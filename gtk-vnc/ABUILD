#ABUILD created by/создан: NomerUNO, uno.kms at gmail.com 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=gtk-vnc
pkgver=0.4.3
pkgbuild=1
arch=('auto')

shortdesc="gtk-vnc is a VNC viewer widget for GTK"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("It is built using coroutines allowing it to be completely asynchronous while remaining single threaded. It provides a core C library, and bindings for Python (PyGTK).")

source=("http://ftp.acc.umu.se/pub/GNOME/sources/${pkgname}/0.4/${pkgname}-${pkgver}.tar.bz2")
#source=("git:git://git.gnome.org/${pkgname}")
patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags="net-libs network"

#dependencies only needed to build package
build_deps=""

provides=""
conflicts=""

adddep=""
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
#numjobs=1

#additional files should be copied into /usr/docs/${pkgname} dir from sources
docs=
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip
custom_opts=""

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
echo ""
}

BUILD_SYSTEM="autotools"

BUILD_WORD="LDFLAGS=\"$SLKLDFLAGS\" CFLAGS=\"$SLKCFLAGS\" CXXFLAGS=\"$SLKCFLAGS\" ./configure"

BUILD_KEYS="--prefix=/usr \
--sysconfdir=/etc \
--localstatedir=/var \
--libdir=/usr/lib${LIBDIRSUFFIX} \
--disable-static \
--mandir=/usr/man \
--enable-nls \
--enable-rebuilds \
--with-python \
--with-sasl"

INSTALL_KEYS="DESTDIR=$pkgdir"

#ran after function build() 
#после сборки
after_build()
{
echo ""
}
