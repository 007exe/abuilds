#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=xmlstarlet
pkgver=1.0.2
pkgbuild=1
arch=('auto')

shortdesc="xmlstarlet (command line xml tool)"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("XMLStarlet is a command line XML toolkit that can be used to transform, query, validate, and edit XML documents and files using a simple set of shell commands, which work similarly to 'grep', 'sed', 'awk', 'tr', 'diff', or 'patch' on plain text files."
	  ""
	  "Homepage http://sourceforge.net/projects/xmlstar/"
)

source=("http://downloads.sourceforge.net/sourceforge/xmlstar/${pkgname}-${pkgver}.tar.gz")

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------

tags="develop app-text"     			#short and long tags / длинный и короткий тег
build_deps="" 			#

provides=""
conflicts=""

adddep=""
removedep=""


#numjobs=1 #Set number of jobs while compliling, otherwise it'll be autodetected

docs=				#additional files should be copied into /usr/docs/${pkgname} dir from sources
gendeps_blacklist=

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
echo ""
}

build()
{
go_src_dir

burn_patches

LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
--prefix=/usr \
--sysconfdir=/etc \
--localstatedir=/var \
--libdir=/usr/lib${LIBDIRSUFFIX} \
--disable-static \
--mandir=/usr/man \
--program-prefix= \
--program-suffix= \
--with-libxml-prefix=/usr \
--with-libxslt-prefix=/usr

sed -i 's/pthread/pthread -lgcrypt/' src/Makefile

make -j${numjobs} || exit 1
make install DESTDIR=$startdir/pkg || exit 1
}

#ran after function build() 
#после сборки
after_build()
{
 echo ""
}
